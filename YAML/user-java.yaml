apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: user-java-deployment
  namespace: api
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/schme: 'http'
        prometheus.io/port: '80'
        prometheus.io/path: '/api/metrics'
      labels:
        app: user-java
    spec:
      terminationGracePeriodSeconds: 20
      containers:
      - name: user-java
        image: simonslab.azurecr.io/tripinsights/user-java:1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
      volumes:
      - name: secrets
        flexVolume:
          driver: "azure/kv"
          options:
            usevmmanagedidentity: "true"             # [OPTIONAL new in version >= v0.0.15] if not provided, will default to "false"
            keyvaultname: "kv-mydriving-DB"              # [REQUIRED] the name of the KeyVault
            keyvaultobjectnames: "SQL-SERVER;SQL-USER;SQL-PASSWORD;SQL-DBNAME"         # [REQUIRED] list of KeyVault object names (semi-colon separated)
            keyvaultobjectaliases: "SQL_SERVER;SQL_USER;SQL_PASSWORD;SQL_DBNAME"      # [OPTIONAL] list of KeyVault object aliases
            keyvaultobjecttypes: "secret;secret;secret;secret"             # [REQUIRED] list of KeyVault object types: secret, key, cert
            tenantid: "72f988bf-86f1-41af-91ab-2d7cd011db47"                    # [REQUIRED] the tenant ID of the KeyVault


---
apiVersion: v1
kind: Service
metadata:
  name: user-java-service
  namespace: api
spec:
  selector:
    app: user-java
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: api
  name: user-java-ingress
spec:
  rules:
  - http:
      paths:
      - path: /api/user-java
        backend:
          serviceName: user-java-service
          servicePort: 80
      - path: /api/docs/user-java
        backend:
          serviceName: user-java-service
          servicePort: 80
